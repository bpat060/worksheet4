{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\CISE_Repos\\\\worksheet4\\\\frontend\\\\src\\\\components\\\\Evidencetable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport articles from \"../dummydata/articles.js\";\nimport { useTable, useSortBy, usePagination } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = _ref => {\n  _s();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useSortBy, usePagination); // Render Data Table UI\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ￿' : ' ￿' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 30\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(page);\n          },\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [3, 7, 15].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"iMXfE2ar8vpPfffBn64hJSJPW+w=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Owner/Documents/GitHub/CISE_Repos/worksheet4/frontend/src/components/Evidencetable.js"],"names":["React","useMemo","articles","useTable","useSortBy","usePagination","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","length","e","target","value","Number","width"],"mappings":"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","sourcesContent":["import React, {useMemo} from \"react\";\r\nimport articles from \"../dummydata/articles.js\";\r\nimport { useTable, useSortBy, usePagination } from 'react-table';\r\nconst Table = ({columns, data}) => {\r\nconst {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    \r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    \r\n    useSortBy,\r\n    usePagination\r\n  )\r\n    // Render Data Table UI\r\n    return (\r\n        <>\r\n          <table {...getTableProps()}>\r\n            <thead>\r\n              {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                  {headerGroup.headers.map(column => (\r\n                    // Add the sorting props to control sorting. For this example\r\n                    // we can add them into the header props\r\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                      {column.render('Header')}\r\n                      {/* Add a sort direction indicator */}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? ' ￿'\r\n                            : ' ￿'\r\n                          : ''}\r\n                      </span>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n              {page.map((row, i) => {\r\n                prepareRow(row)\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    })}\r\n                  </tr>\r\n                )\r\n              })}\r\n            </tbody>\r\n          </table>  \r\n         {/* Pagination */}\r\n         <div className=\"pagination\">\r\n            <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n              {'<<'}\r\n            </button>{' '}\r\n            <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              {'<'}\r\n            </button>{' '}\r\n            <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n              {'>'}\r\n            </button>{' '}\r\n            <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n              {'>>'}\r\n            </button>{' '}\r\n            <span>\r\n              Page{' '}\r\n              <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[3, 7, 15].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n  \r\n  export default Table;"]},"metadata":{},"sourceType":"module"}